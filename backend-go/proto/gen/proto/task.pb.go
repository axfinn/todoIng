// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: task.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 任务状态枚举
type TaskStatus int32

const (
	TaskStatus_TO_DO       TaskStatus = 0
	TaskStatus_IN_PROGRESS TaskStatus = 1
	TaskStatus_DONE        TaskStatus = 2
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TO_DO",
		1: "IN_PROGRESS",
		2: "DONE",
	}
	TaskStatus_value = map[string]int32{
		"TO_DO":       0,
		"IN_PROGRESS": 1,
		"DONE":        2,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_task_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_task_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{0}
}

// 任务优先级枚举
type TaskPriority int32

const (
	TaskPriority_LOW    TaskPriority = 0
	TaskPriority_MEDIUM TaskPriority = 1
	TaskPriority_HIGH   TaskPriority = 2
)

// Enum value maps for TaskPriority.
var (
	TaskPriority_name = map[int32]string{
		0: "LOW",
		1: "MEDIUM",
		2: "HIGH",
	}
	TaskPriority_value = map[string]int32{
		"LOW":    0,
		"MEDIUM": 1,
		"HIGH":   2,
	}
)

func (x TaskPriority) Enum() *TaskPriority {
	p := new(TaskPriority)
	*p = x
	return p
}

func (x TaskPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_task_proto_enumTypes[1].Descriptor()
}

func (TaskPriority) Type() protoreflect.EnumType {
	return &file_task_proto_enumTypes[1]
}

func (x TaskPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskPriority.Descriptor instead.
func (TaskPriority) EnumDescriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{1}
}

// 评论信息
type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Comment) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Comment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// 任务信息
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        TaskStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=todoing.TaskStatus" json:"status,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,5,opt,name=priority,proto3,enum=todoing.TaskPriority" json:"priority,omitempty"`
	Assignee      string                 `protobuf:"bytes,6,opt,name=assignee,proto3" json:"assignee,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Deadline      string                 `protobuf:"bytes,10,opt,name=deadline,proto3" json:"deadline,omitempty"`
	ScheduledDate string                 `protobuf:"bytes,11,opt,name=scheduled_date,json=scheduledDate,proto3" json:"scheduled_date,omitempty"`
	Comments      []*Comment             `protobuf:"bytes,12,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TO_DO
}

func (x *Task) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_LOW
}

func (x *Task) GetAssignee() string {
	if x != nil {
		return x.Assignee
	}
	return ""
}

func (x *Task) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Task) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Task) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Task) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *Task) GetScheduledDate() string {
	if x != nil {
		return x.ScheduledDate
	}
	return ""
}

func (x *Task) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

// 创建任务请求
type CreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status        TaskStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=todoing.TaskStatus" json:"status,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,4,opt,name=priority,proto3,enum=todoing.TaskPriority" json:"priority,omitempty"`
	Assignee      string                 `protobuf:"bytes,5,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Deadline      string                 `protobuf:"bytes,6,opt,name=deadline,proto3" json:"deadline,omitempty"`
	ScheduledDate string                 `protobuf:"bytes,7,opt,name=scheduled_date,json=scheduledDate,proto3" json:"scheduled_date,omitempty"`
	Token         string                 `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTaskRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TO_DO
}

func (x *CreateTaskRequest) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_LOW
}

func (x *CreateTaskRequest) GetAssignee() string {
	if x != nil {
		return x.Assignee
	}
	return ""
}

func (x *CreateTaskRequest) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *CreateTaskRequest) GetScheduledDate() string {
	if x != nil {
		return x.ScheduledDate
	}
	return ""
}

func (x *CreateTaskRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 创建任务响应
type CreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	mi := &file_task_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *CreateTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取任务列表请求
type GetTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTasksRequest) Reset() {
	*x = GetTasksRequest{}
	mi := &file_task_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksRequest) ProtoMessage() {}

func (x *GetTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksRequest.ProtoReflect.Descriptor instead.
func (*GetTasksRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{4}
}

func (x *GetTasksRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取任务列表响应
type GetTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTasksResponse) Reset() {
	*x = GetTasksResponse{}
	mi := &file_task_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksResponse) ProtoMessage() {}

func (x *GetTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksResponse.ProtoReflect.Descriptor instead.
func (*GetTasksResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{5}
}

func (x *GetTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *GetTasksResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取任务请求
type GetTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	mi := &file_task_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{6}
}

func (x *GetTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTaskRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取任务响应
type GetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	mi := &file_task_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{7}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *GetTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新任务请求
type UpdateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        TaskStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=todoing.TaskStatus" json:"status,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,5,opt,name=priority,proto3,enum=todoing.TaskPriority" json:"priority,omitempty"`
	Assignee      string                 `protobuf:"bytes,6,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Deadline      string                 `protobuf:"bytes,7,opt,name=deadline,proto3" json:"deadline,omitempty"`
	ScheduledDate string                 `protobuf:"bytes,8,opt,name=scheduled_date,json=scheduledDate,proto3" json:"scheduled_date,omitempty"`
	Token         string                 `protobuf:"bytes,9,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	mi := &file_task_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTaskRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TO_DO
}

func (x *UpdateTaskRequest) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_LOW
}

func (x *UpdateTaskRequest) GetAssignee() string {
	if x != nil {
		return x.Assignee
	}
	return ""
}

func (x *UpdateTaskRequest) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *UpdateTaskRequest) GetScheduledDate() string {
	if x != nil {
		return x.ScheduledDate
	}
	return ""
}

func (x *UpdateTaskRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 更新任务响应
type UpdateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskResponse) Reset() {
	*x = UpdateTaskResponse{}
	mi := &file_task_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResponse) ProtoMessage() {}

func (x *UpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *UpdateTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除任务请求
type DeleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	mi := &file_task_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteTaskRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 删除任务响应
type DeleteTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskResponse) Reset() {
	*x = DeleteTaskResponse{}
	mi := &file_task_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskResponse) ProtoMessage() {}

func (x *DeleteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 添加评论请求
type AddCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentRequest) Reset() {
	*x = AddCommentRequest{}
	mi := &file_task_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentRequest) ProtoMessage() {}

func (x *AddCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentRequest.ProtoReflect.Descriptor instead.
func (*AddCommentRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{12}
}

func (x *AddCommentRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *AddCommentRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AddCommentRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 添加评论响应
type AddCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentResponse) Reset() {
	*x = AddCommentResponse{}
	mi := &file_task_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentResponse) ProtoMessage() {}

func (x *AddCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentResponse.ProtoReflect.Descriptor instead.
func (*AddCommentResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{13}
}

func (x *AddCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *AddCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 分配任务请求
type AssignTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Assignee      string                 `protobuf:"bytes,2,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTaskRequest) Reset() {
	*x = AssignTaskRequest{}
	mi := &file_task_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTaskRequest) ProtoMessage() {}

func (x *AssignTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTaskRequest.ProtoReflect.Descriptor instead.
func (*AssignTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{14}
}

func (x *AssignTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssignTaskRequest) GetAssignee() string {
	if x != nil {
		return x.Assignee
	}
	return ""
}

func (x *AssignTaskRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 分配任务响应
type AssignTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTaskResponse) Reset() {
	*x = AssignTaskResponse{}
	mi := &file_task_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTaskResponse) ProtoMessage() {}

func (x *AssignTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTaskResponse.ProtoReflect.Descriptor instead.
func (*AssignTaskResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{15}
}

func (x *AssignTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *AssignTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 导入任务请求
type ImportTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportTasksRequest) Reset() {
	*x = ImportTasksRequest{}
	mi := &file_task_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTasksRequest) ProtoMessage() {}

func (x *ImportTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTasksRequest.ProtoReflect.Descriptor instead.
func (*ImportTasksRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{16}
}

func (x *ImportTasksRequest) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ImportTasksRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 导入任务响应
type ImportTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Imported      int32                  `protobuf:"varint,2,opt,name=imported,proto3" json:"imported,omitempty"`
	Errors        []*ImportError         `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportTasksResponse) Reset() {
	*x = ImportTasksResponse{}
	mi := &file_task_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTasksResponse) ProtoMessage() {}

func (x *ImportTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTasksResponse.ProtoReflect.Descriptor instead.
func (*ImportTasksResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{17}
}

func (x *ImportTasksResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ImportTasksResponse) GetImported() int32 {
	if x != nil {
		return x.Imported
	}
	return 0
}

func (x *ImportTasksResponse) GetErrors() []*ImportError {
	if x != nil {
		return x.Errors
	}
	return nil
}

// 导入错误信息
type ImportError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportError) Reset() {
	*x = ImportError{}
	mi := &file_task_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportError) ProtoMessage() {}

func (x *ImportError) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportError.ProtoReflect.Descriptor instead.
func (*ImportError) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{18}
}

func (x *ImportError) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ImportError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// 导出任务请求
type ExportTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportTasksRequest) Reset() {
	*x = ExportTasksRequest{}
	mi := &file_task_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTasksRequest) ProtoMessage() {}

func (x *ExportTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTasksRequest.ProtoReflect.Descriptor instead.
func (*ExportTasksRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{19}
}

func (x *ExportTasksRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 导出任务响应
type ExportTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportTasksResponse) Reset() {
	*x = ExportTasksResponse{}
	mi := &file_task_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTasksResponse) ProtoMessage() {}

func (x *ExportTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTasksResponse.ProtoReflect.Descriptor instead.
func (*ExportTasksResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{20}
}

func (x *ExportTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ExportTasksResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_task_proto protoreflect.FileDescriptor

const file_task_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"task.proto\x12\atodoing\x1a\fcommon.proto\"k\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"created_by\x18\x03 \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\"\x98\x03\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12+\n" +
	"\x06status\x18\x04 \x01(\x0e2\x13.todoing.TaskStatusR\x06status\x121\n" +
	"\bpriority\x18\x05 \x01(\x0e2\x15.todoing.TaskPriorityR\bpriority\x12\x1a\n" +
	"\bassignee\x18\x06 \x01(\tR\bassignee\x12\x1d\n" +
	"\n" +
	"created_by\x18\a \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\x12\x1a\n" +
	"\bdeadline\x18\n" +
	" \x01(\tR\bdeadline\x12%\n" +
	"\x0escheduled_date\x18\v \x01(\tR\rscheduledDate\x12,\n" +
	"\bcomments\x18\f \x03(\v2\x10.todoing.CommentR\bcomments\"\xa0\x02\n" +
	"\x11CreateTaskRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12+\n" +
	"\x06status\x18\x03 \x01(\x0e2\x13.todoing.TaskStatusR\x06status\x121\n" +
	"\bpriority\x18\x04 \x01(\x0e2\x15.todoing.TaskPriorityR\bpriority\x12\x1a\n" +
	"\bassignee\x18\x05 \x01(\tR\bassignee\x12\x1a\n" +
	"\bdeadline\x18\x06 \x01(\tR\bdeadline\x12%\n" +
	"\x0escheduled_date\x18\a \x01(\tR\rscheduledDate\x12\x14\n" +
	"\x05token\x18\b \x01(\tR\x05token\"Q\n" +
	"\x12CreateTaskResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todoing.TaskR\x04task\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"'\n" +
	"\x0fGetTasksRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"Q\n" +
	"\x10GetTasksResponse\x12#\n" +
	"\x05tasks\x18\x01 \x03(\v2\r.todoing.TaskR\x05tasks\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"6\n" +
	"\x0eGetTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"N\n" +
	"\x0fGetTaskResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todoing.TaskR\x04task\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xb0\x02\n" +
	"\x11UpdateTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12+\n" +
	"\x06status\x18\x04 \x01(\x0e2\x13.todoing.TaskStatusR\x06status\x121\n" +
	"\bpriority\x18\x05 \x01(\x0e2\x15.todoing.TaskPriorityR\bpriority\x12\x1a\n" +
	"\bassignee\x18\x06 \x01(\tR\bassignee\x12\x1a\n" +
	"\bdeadline\x18\a \x01(\tR\bdeadline\x12%\n" +
	"\x0escheduled_date\x18\b \x01(\tR\rscheduledDate\x12\x14\n" +
	"\x05token\x18\t \x01(\tR\x05token\"Q\n" +
	"\x12UpdateTaskResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todoing.TaskR\x04task\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"9\n" +
	"\x11DeleteTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\".\n" +
	"\x12DeleteTaskResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"V\n" +
	"\x11AddCommentRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"Z\n" +
	"\x12AddCommentResponse\x12*\n" +
	"\acomment\x18\x01 \x01(\v2\x10.todoing.CommentR\acomment\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"U\n" +
	"\x11AssignTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bassignee\x18\x02 \x01(\tR\bassignee\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"Q\n" +
	"\x12AssignTaskResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todoing.TaskR\x04task\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"O\n" +
	"\x12ImportTasksRequest\x12#\n" +
	"\x05tasks\x18\x01 \x03(\v2\r.todoing.TaskR\x05tasks\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"q\n" +
	"\x13ImportTasksResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\x12\x1a\n" +
	"\bimported\x18\x02 \x01(\x05R\bimported\x12,\n" +
	"\x06errors\x18\x03 \x03(\v2\x14.todoing.ImportErrorR\x06errors\"9\n" +
	"\vImportError\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"*\n" +
	"\x12ExportTasksRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"T\n" +
	"\x13ExportTasksResponse\x12#\n" +
	"\x05tasks\x18\x01 \x03(\v2\r.todoing.TaskR\x05tasks\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*2\n" +
	"\n" +
	"TaskStatus\x12\t\n" +
	"\x05TO_DO\x10\x00\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x01\x12\b\n" +
	"\x04DONE\x10\x02*-\n" +
	"\fTaskPriority\x12\a\n" +
	"\x03LOW\x10\x00\x12\n" +
	"\n" +
	"\x06MEDIUM\x10\x01\x12\b\n" +
	"\x04HIGH\x10\x022\x83\x05\n" +
	"\vTaskService\x12E\n" +
	"\n" +
	"CreateTask\x12\x1a.todoing.CreateTaskRequest\x1a\x1b.todoing.CreateTaskResponse\x12?\n" +
	"\bGetTasks\x12\x18.todoing.GetTasksRequest\x1a\x19.todoing.GetTasksResponse\x12<\n" +
	"\aGetTask\x12\x17.todoing.GetTaskRequest\x1a\x18.todoing.GetTaskResponse\x12E\n" +
	"\n" +
	"UpdateTask\x12\x1a.todoing.UpdateTaskRequest\x1a\x1b.todoing.UpdateTaskResponse\x12E\n" +
	"\n" +
	"DeleteTask\x12\x1a.todoing.DeleteTaskRequest\x1a\x1b.todoing.DeleteTaskResponse\x12E\n" +
	"\n" +
	"AddComment\x12\x1a.todoing.AddCommentRequest\x1a\x1b.todoing.AddCommentResponse\x12E\n" +
	"\n" +
	"AssignTask\x12\x1a.todoing.AssignTaskRequest\x1a\x1b.todoing.AssignTaskResponse\x12H\n" +
	"\vImportTasks\x12\x1b.todoing.ImportTasksRequest\x1a\x1c.todoing.ImportTasksResponse\x12H\n" +
	"\vExportTasks\x12\x1b.todoing.ExportTasksRequest\x1a\x1c.todoing.ExportTasksResponseB\tZ\a./protob\x06proto3"

var (
	file_task_proto_rawDescOnce sync.Once
	file_task_proto_rawDescData []byte
)

func file_task_proto_rawDescGZIP() []byte {
	file_task_proto_rawDescOnce.Do(func() {
		file_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_proto_rawDesc), len(file_task_proto_rawDesc)))
	})
	return file_task_proto_rawDescData
}

var file_task_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_task_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_task_proto_goTypes = []any{
	(TaskStatus)(0),             // 0: todoing.TaskStatus
	(TaskPriority)(0),           // 1: todoing.TaskPriority
	(*Comment)(nil),             // 2: todoing.Comment
	(*Task)(nil),                // 3: todoing.Task
	(*CreateTaskRequest)(nil),   // 4: todoing.CreateTaskRequest
	(*CreateTaskResponse)(nil),  // 5: todoing.CreateTaskResponse
	(*GetTasksRequest)(nil),     // 6: todoing.GetTasksRequest
	(*GetTasksResponse)(nil),    // 7: todoing.GetTasksResponse
	(*GetTaskRequest)(nil),      // 8: todoing.GetTaskRequest
	(*GetTaskResponse)(nil),     // 9: todoing.GetTaskResponse
	(*UpdateTaskRequest)(nil),   // 10: todoing.UpdateTaskRequest
	(*UpdateTaskResponse)(nil),  // 11: todoing.UpdateTaskResponse
	(*DeleteTaskRequest)(nil),   // 12: todoing.DeleteTaskRequest
	(*DeleteTaskResponse)(nil),  // 13: todoing.DeleteTaskResponse
	(*AddCommentRequest)(nil),   // 14: todoing.AddCommentRequest
	(*AddCommentResponse)(nil),  // 15: todoing.AddCommentResponse
	(*AssignTaskRequest)(nil),   // 16: todoing.AssignTaskRequest
	(*AssignTaskResponse)(nil),  // 17: todoing.AssignTaskResponse
	(*ImportTasksRequest)(nil),  // 18: todoing.ImportTasksRequest
	(*ImportTasksResponse)(nil), // 19: todoing.ImportTasksResponse
	(*ImportError)(nil),         // 20: todoing.ImportError
	(*ExportTasksRequest)(nil),  // 21: todoing.ExportTasksRequest
	(*ExportTasksResponse)(nil), // 22: todoing.ExportTasksResponse
}
var file_task_proto_depIdxs = []int32{
	0,  // 0: todoing.Task.status:type_name -> todoing.TaskStatus
	1,  // 1: todoing.Task.priority:type_name -> todoing.TaskPriority
	2,  // 2: todoing.Task.comments:type_name -> todoing.Comment
	0,  // 3: todoing.CreateTaskRequest.status:type_name -> todoing.TaskStatus
	1,  // 4: todoing.CreateTaskRequest.priority:type_name -> todoing.TaskPriority
	3,  // 5: todoing.CreateTaskResponse.task:type_name -> todoing.Task
	3,  // 6: todoing.GetTasksResponse.tasks:type_name -> todoing.Task
	3,  // 7: todoing.GetTaskResponse.task:type_name -> todoing.Task
	0,  // 8: todoing.UpdateTaskRequest.status:type_name -> todoing.TaskStatus
	1,  // 9: todoing.UpdateTaskRequest.priority:type_name -> todoing.TaskPriority
	3,  // 10: todoing.UpdateTaskResponse.task:type_name -> todoing.Task
	2,  // 11: todoing.AddCommentResponse.comment:type_name -> todoing.Comment
	3,  // 12: todoing.AssignTaskResponse.task:type_name -> todoing.Task
	3,  // 13: todoing.ImportTasksRequest.tasks:type_name -> todoing.Task
	20, // 14: todoing.ImportTasksResponse.errors:type_name -> todoing.ImportError
	3,  // 15: todoing.ExportTasksResponse.tasks:type_name -> todoing.Task
	4,  // 16: todoing.TaskService.CreateTask:input_type -> todoing.CreateTaskRequest
	6,  // 17: todoing.TaskService.GetTasks:input_type -> todoing.GetTasksRequest
	8,  // 18: todoing.TaskService.GetTask:input_type -> todoing.GetTaskRequest
	10, // 19: todoing.TaskService.UpdateTask:input_type -> todoing.UpdateTaskRequest
	12, // 20: todoing.TaskService.DeleteTask:input_type -> todoing.DeleteTaskRequest
	14, // 21: todoing.TaskService.AddComment:input_type -> todoing.AddCommentRequest
	16, // 22: todoing.TaskService.AssignTask:input_type -> todoing.AssignTaskRequest
	18, // 23: todoing.TaskService.ImportTasks:input_type -> todoing.ImportTasksRequest
	21, // 24: todoing.TaskService.ExportTasks:input_type -> todoing.ExportTasksRequest
	5,  // 25: todoing.TaskService.CreateTask:output_type -> todoing.CreateTaskResponse
	7,  // 26: todoing.TaskService.GetTasks:output_type -> todoing.GetTasksResponse
	9,  // 27: todoing.TaskService.GetTask:output_type -> todoing.GetTaskResponse
	11, // 28: todoing.TaskService.UpdateTask:output_type -> todoing.UpdateTaskResponse
	13, // 29: todoing.TaskService.DeleteTask:output_type -> todoing.DeleteTaskResponse
	15, // 30: todoing.TaskService.AddComment:output_type -> todoing.AddCommentResponse
	17, // 31: todoing.TaskService.AssignTask:output_type -> todoing.AssignTaskResponse
	19, // 32: todoing.TaskService.ImportTasks:output_type -> todoing.ImportTasksResponse
	22, // 33: todoing.TaskService.ExportTasks:output_type -> todoing.ExportTasksResponse
	25, // [25:34] is the sub-list for method output_type
	16, // [16:25] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_task_proto_init() }
func file_task_proto_init() {
	if File_task_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_proto_rawDesc), len(file_task_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_task_proto_goTypes,
		DependencyIndexes: file_task_proto_depIdxs,
		EnumInfos:         file_task_proto_enumTypes,
		MessageInfos:      file_task_proto_msgTypes,
	}.Build()
	File_task_proto = out.File
	file_task_proto_goTypes = nil
	file_task_proto_depIdxs = nil
}
